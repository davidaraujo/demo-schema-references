/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.demo.orders.avro.pojo;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Payment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6432841481039970217L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Payment\",\"namespace\":\"io.confluent.demo.orders.avro.pojo\",\"fields\":[{\"name\":\"payment_method_code\",\"type\":\"int\"},{\"name\":\"card_number\",\"type\":\"long\"},{\"name\":\"expiration_date\",\"type\":\"string\",\"default\":\"00/00\"},{\"name\":\"cvv\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Payment> ENCODER =
      new BinaryMessageEncoder<Payment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Payment> DECODER =
      new BinaryMessageDecoder<Payment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Payment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Payment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Payment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Payment>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Payment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Payment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Payment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Payment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int payment_method_code;
  @Deprecated public long card_number;
  @Deprecated public java.lang.CharSequence expiration_date;
  @Deprecated public int cvv;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Payment() {}

  /**
   * All-args constructor.
   * @param payment_method_code The new value for payment_method_code
   * @param card_number The new value for card_number
   * @param expiration_date The new value for expiration_date
   * @param cvv The new value for cvv
   */
  public Payment(java.lang.Integer payment_method_code, java.lang.Long card_number, java.lang.CharSequence expiration_date, java.lang.Integer cvv) {
    this.payment_method_code = payment_method_code;
    this.card_number = card_number;
    this.expiration_date = expiration_date;
    this.cvv = cvv;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return payment_method_code;
    case 1: return card_number;
    case 2: return expiration_date;
    case 3: return cvv;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: payment_method_code = (java.lang.Integer)value$; break;
    case 1: card_number = (java.lang.Long)value$; break;
    case 2: expiration_date = (java.lang.CharSequence)value$; break;
    case 3: cvv = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'payment_method_code' field.
   * @return The value of the 'payment_method_code' field.
   */
  public int getPaymentMethodCode() {
    return payment_method_code;
  }


  /**
   * Sets the value of the 'payment_method_code' field.
   * @param value the value to set.
   */
  public void setPaymentMethodCode(int value) {
    this.payment_method_code = value;
  }

  /**
   * Gets the value of the 'card_number' field.
   * @return The value of the 'card_number' field.
   */
  public long getCardNumber() {
    return card_number;
  }


  /**
   * Sets the value of the 'card_number' field.
   * @param value the value to set.
   */
  public void setCardNumber(long value) {
    this.card_number = value;
  }

  /**
   * Gets the value of the 'expiration_date' field.
   * @return The value of the 'expiration_date' field.
   */
  public java.lang.CharSequence getExpirationDate() {
    return expiration_date;
  }


  /**
   * Sets the value of the 'expiration_date' field.
   * @param value the value to set.
   */
  public void setExpirationDate(java.lang.CharSequence value) {
    this.expiration_date = value;
  }

  /**
   * Gets the value of the 'cvv' field.
   * @return The value of the 'cvv' field.
   */
  public int getCvv() {
    return cvv;
  }


  /**
   * Sets the value of the 'cvv' field.
   * @param value the value to set.
   */
  public void setCvv(int value) {
    this.cvv = value;
  }

  /**
   * Creates a new Payment RecordBuilder.
   * @return A new Payment RecordBuilder
   */
  public static io.confluent.demo.orders.avro.pojo.Payment.Builder newBuilder() {
    return new io.confluent.demo.orders.avro.pojo.Payment.Builder();
  }

  /**
   * Creates a new Payment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Payment RecordBuilder
   */
  public static io.confluent.demo.orders.avro.pojo.Payment.Builder newBuilder(io.confluent.demo.orders.avro.pojo.Payment.Builder other) {
    if (other == null) {
      return new io.confluent.demo.orders.avro.pojo.Payment.Builder();
    } else {
      return new io.confluent.demo.orders.avro.pojo.Payment.Builder(other);
    }
  }

  /**
   * Creates a new Payment RecordBuilder by copying an existing Payment instance.
   * @param other The existing instance to copy.
   * @return A new Payment RecordBuilder
   */
  public static io.confluent.demo.orders.avro.pojo.Payment.Builder newBuilder(io.confluent.demo.orders.avro.pojo.Payment other) {
    if (other == null) {
      return new io.confluent.demo.orders.avro.pojo.Payment.Builder();
    } else {
      return new io.confluent.demo.orders.avro.pojo.Payment.Builder(other);
    }
  }

  /**
   * RecordBuilder for Payment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Payment>
    implements org.apache.avro.data.RecordBuilder<Payment> {

    private int payment_method_code;
    private long card_number;
    private java.lang.CharSequence expiration_date;
    private int cvv;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.demo.orders.avro.pojo.Payment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.payment_method_code)) {
        this.payment_method_code = data().deepCopy(fields()[0].schema(), other.payment_method_code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.card_number)) {
        this.card_number = data().deepCopy(fields()[1].schema(), other.card_number);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.expiration_date)) {
        this.expiration_date = data().deepCopy(fields()[2].schema(), other.expiration_date);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.cvv)) {
        this.cvv = data().deepCopy(fields()[3].schema(), other.cvv);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing Payment instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.demo.orders.avro.pojo.Payment other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.payment_method_code)) {
        this.payment_method_code = data().deepCopy(fields()[0].schema(), other.payment_method_code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.card_number)) {
        this.card_number = data().deepCopy(fields()[1].schema(), other.card_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.expiration_date)) {
        this.expiration_date = data().deepCopy(fields()[2].schema(), other.expiration_date);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cvv)) {
        this.cvv = data().deepCopy(fields()[3].schema(), other.cvv);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'payment_method_code' field.
      * @return The value.
      */
    public int getPaymentMethodCode() {
      return payment_method_code;
    }


    /**
      * Sets the value of the 'payment_method_code' field.
      * @param value The value of 'payment_method_code'.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder setPaymentMethodCode(int value) {
      validate(fields()[0], value);
      this.payment_method_code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'payment_method_code' field has been set.
      * @return True if the 'payment_method_code' field has been set, false otherwise.
      */
    public boolean hasPaymentMethodCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'payment_method_code' field.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder clearPaymentMethodCode() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'card_number' field.
      * @return The value.
      */
    public long getCardNumber() {
      return card_number;
    }


    /**
      * Sets the value of the 'card_number' field.
      * @param value The value of 'card_number'.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder setCardNumber(long value) {
      validate(fields()[1], value);
      this.card_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'card_number' field has been set.
      * @return True if the 'card_number' field has been set, false otherwise.
      */
    public boolean hasCardNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'card_number' field.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder clearCardNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'expiration_date' field.
      * @return The value.
      */
    public java.lang.CharSequence getExpirationDate() {
      return expiration_date;
    }


    /**
      * Sets the value of the 'expiration_date' field.
      * @param value The value of 'expiration_date'.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder setExpirationDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.expiration_date = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'expiration_date' field has been set.
      * @return True if the 'expiration_date' field has been set, false otherwise.
      */
    public boolean hasExpirationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'expiration_date' field.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder clearExpirationDate() {
      expiration_date = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'cvv' field.
      * @return The value.
      */
    public int getCvv() {
      return cvv;
    }


    /**
      * Sets the value of the 'cvv' field.
      * @param value The value of 'cvv'.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder setCvv(int value) {
      validate(fields()[3], value);
      this.cvv = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'cvv' field has been set.
      * @return True if the 'cvv' field has been set, false otherwise.
      */
    public boolean hasCvv() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'cvv' field.
      * @return This builder.
      */
    public io.confluent.demo.orders.avro.pojo.Payment.Builder clearCvv() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Payment build() {
      try {
        Payment record = new Payment();
        record.payment_method_code = fieldSetFlags()[0] ? this.payment_method_code : (java.lang.Integer) defaultValue(fields()[0]);
        record.card_number = fieldSetFlags()[1] ? this.card_number : (java.lang.Long) defaultValue(fields()[1]);
        record.expiration_date = fieldSetFlags()[2] ? this.expiration_date : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.cvv = fieldSetFlags()[3] ? this.cvv : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Payment>
    WRITER$ = (org.apache.avro.io.DatumWriter<Payment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Payment>
    READER$ = (org.apache.avro.io.DatumReader<Payment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.payment_method_code);

    out.writeLong(this.card_number);

    out.writeString(this.expiration_date);

    out.writeInt(this.cvv);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.payment_method_code = in.readInt();

      this.card_number = in.readLong();

      this.expiration_date = in.readString(this.expiration_date instanceof Utf8 ? (Utf8)this.expiration_date : null);

      this.cvv = in.readInt();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.payment_method_code = in.readInt();
          break;

        case 1:
          this.card_number = in.readLong();
          break;

        case 2:
          this.expiration_date = in.readString(this.expiration_date instanceof Utf8 ? (Utf8)this.expiration_date : null);
          break;

        case 3:
          this.cvv = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










